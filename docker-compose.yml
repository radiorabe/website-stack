version: '3'
services:

  next:
    container_name: rabe-next
    build:
      dockerfile: ${DOCKERFILENAME:-./Dockerfile.prod}
      context: ./next
    restart: unless-stopped
    ports:
      - '${NEXT_PORT}:3000'

  strapi:
    container_name: rabe-strapi
    build:
      dockerfile: Dockerfile
      context: ./strapi
    restart: unless-stopped
    env_file: .env
    volumes:
      - ./strapi/config:/opt/app/config
      - ./strapi/src:/opt/app/src
      - ./strapi/package.json:/opt/package.json
      - ./strapi/yarn.lock:/opt/yarn.lock
      - ./.env:/opt/app/.env
      - ./strapi/public/uploads:/opt/app/public/uploads
    ports:
      - '${STRAPI_PORT}:1337'
    # networks:
    #   - rabeNetwork
    depends_on:
      - strapiDB
      
  strapiDB:
    container_name: rabe-strapiDB
    platform: linux/amd64 #for platform error on Apple M1 chips
    restart: unless-stopped
    env_file: .env
    image: postgres:14.5-alpine
    environment:
      POSTGRES_USER: ${DATABASE_USERNAME}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_DB: ${DATABASE_NAME}
    volumes:
      - rabe-data:/var/lib/postgresql/data/ #using a volume
      #- ./data:/var/lib/postgresql/data/ # if you want to use a bind folder
    # ports:
    #   - '${DATABASE_PORT}:5432'
    # networks:
    #   - rabeNetwork
      
  # strapiAdminer:
  #   container_name: strapiAdminer
  #   image: adminer
  #   restart: unless-stopped
  #   ports:
  #     - '9090:8080'
  #   environment:
  #     - ADMINER_DEFAULT_SERVER=strapiDB
  #   networks:
  #     - strapi
  #   depends_on:
  #     - strapiDB

volumes:
  rabe-data:

# networks:
#   rabeNetwork:
#     name: rabeNetwork
#     driver: bridge
